{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getSearchedTodos","searchedLetters","input","trim","toLowerCase","todos","filter","todo","title","includes","TodoList","appTodo","setTodo","onCheck","onSelect","selected","useState","setTodos","useEffect","className","map","id","completed","cn","type","onClick","TodoFilter","onFilter","query","setQuery","customFilter","useCallback","a","v","searchFilter","s","onChange","event","target","value","placeholder","style","pointerEvents","Loader","TodoModal","user","setUser","loader","setLoader","userId","href","email","name","App","setAppTodo","check","setCheck","selectedTodoId","setSelectedTodoId","todoId","find","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23afb9a9.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n\nexport const getCompletedTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => todo.completed));\n};\n\nexport const getActiveTodos = () => {\n  return getTodos()\n    .then(todos => todos.filter(todo => !todo.completed));\n};\n\nexport const getSearchedTodos = (searchedLetters: string) => {\n  const input = searchedLetters.trim().toLowerCase();\n\n  return getTodos()\n    .then(todos => todos\n      .filter(todo => todo.title.toLowerCase().includes(input)));\n};\n\nexport const selectTodo = (todoId: number) => {\n  getTodos().then(todos => todos.find(todo => todo.id === todoId) || null);\n};\n","import cn from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  appTodo: Todo[],\n  setTodo: (todo: Todo) => void,\n  onCheck: (isSelected: boolean) => void,\n  onSelect: (selectedTodoId: number) => void,\n  selected: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  appTodo, setTodo, onCheck, onSelect, selected,\n}) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  useEffect(() => {\n    setTodos(appTodo);\n  }, [appTodo]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered\" />\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn('has-text-success', {\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  onCheck(true);\n                  setTodo(todo);\n                  onSelect(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    { 'fa-eye': selected !== todo.id },\n                    { 'fa-eye-slash': selected === todo.id },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\n// eslint-disable-next-line import/no-duplicates\nimport { getActiveTodos, getCompletedTodos } from '../../api';\n// eslint-disable-next-line import/no-duplicates\nimport { getSearchedTodos, getTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  onFilter: React.Dispatch<React.SetStateAction<Todo[]>>,\n};\n\nexport const TodoFilter:React.FC<Props> = ({ onFilter }) => {\n  const [query, setQuery] = useState('');\n\n  const customFilter = useCallback(async (input: string) => {\n    if (input === 'all') {\n      const v = await getTodos();\n\n      onFilter(v);\n    }\n\n    if (input === 'completed') {\n      const v = await getCompletedTodos();\n\n      onFilter(v);\n    }\n\n    if (input === 'active') {\n      const v = await getActiveTodos();\n\n      onFilter(v);\n    }\n  }, []);\n\n  const searchFilter = async (searchedLetters: string) => {\n    const s = await getSearchedTodos(searchedLetters);\n\n    onFilter(s);\n    setQuery(searchedLetters);\n  };\n\n  useEffect(() => {\n    getTodos().then(() => customFilter);\n  });\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => customFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => searchFilter(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                searchFilter('');\n                setQuery('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onCheck: (isSelected: boolean) => void,\n  onSelect: (selectedTodoId: number) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onCheck, onSelect }) => {\n  const [user, setUser] = useState<User>();\n  const [loader, setLoader] = useState(true);\n\n  setTimeout(() => {\n    setLoader(false);\n  }, 300);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader && !user?.id\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  onCheck(false);\n                  onSelect(0);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className={cn('has-text-success', {\n                  'has-text-danger': !todo.completed,\n                })}\n                >\n                  {todo.completed ? 'Done' : 'Planned'}\n\n                </strong>\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, selectTodo } from './api';\n\nexport const App: React.FC = () => {\n  const [todo, setTodo] = useState<Todo>();\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [appTodo, setAppTodo] = useState<Todo[]>([]);\n  const [check, setCheck] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(0);\n\n  useEffect(() => {\n    selectTodo(selectedTodoId);\n  });\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  useEffect(() => {\n    setTodos(todos);\n  }, [todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter onFilter={setAppTodo} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length\n                ? <TodoList appTodo={appTodo} setTodo={setTodo} onCheck={setCheck} onSelect={setSelectedTodoId} selected={selectedTodoId} />\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {(todo && check) && (<TodoModal todo={todo} onCheck={setCheck} onSelect={setSelectedTodoId} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}